{"version":3,"sources":["utils/_Data.js","actions/Types.js","components/LoginBox.js","actions/Auth.js","components/Header.js","pages/BeforeLogin.js","components/DisplayQuestions.js","components/ControlledTabs.js","pages/Dashboard.js","actions/Users.js","components/CardDisplay.js","actions/Questions.js","components/NoQuestion.js","pages/AnswerQuestion.js","pages/NewQuestion.js","pages/LeaderBoard.js","route/PrivateRoute.js","components/NotFound.js","reducers/Auth.js","reducers/Questions.js","reducers/Users.js","reducers/index.js","store/Store.js","App.js","serviceWorker.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_getUsers","Promise","res","rej","setTimeout","_getQuestions","_saveQuestion","question","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","concat","_saveQuestionAnswer","qid","answer","connect","state","isAuthenticated","auth","login","location","dispatch","a","console","log","type","payload","window","replace","err","useState","usersName","setUsersName","userSignIn","useEffect","getUsers","Object","entries","map","value","Dropdown","Item","key","eventKey","Card","className","Header","Body","Title","DropdownButton","onSelect","evt","evtkey","target","variant","title","block","role","user","logout","headerComponent","Navbar","bg","Brand","as","Link","to","alt","src","width","height","Nav","onClick","href","BeforeLogin","path","undefined","from","pathname","Container","style","paddingTop","Row","Col","allQuestions","answeredQuestion","CardComponents","minWidth","margin","Text","Button","CardGroup","setKey","answeredQuestions","unansweredQuestions","localStorage","keys","sort","b","filter","includes","Tabs","activeKey","k","Tab","Dashboard","textAlign","marginTop","allUsers","addAnswerUser","recordAnswerQuestion","option1Text","option2Text","isAnswered","choice","setChoice","redirect","setRedirect","onChangeHandler","event","onSubmitHandler","preventDefault","newAnswerUser","newAnswers","userVotes","bodyComponent","financial","x","Number","parseFloat","toFixed","total","length","percent1","percent2","alignContent","alignItems","alignText","border","Image","roundedCircle","Footer","ProgressBar","striped","label","Form","onSubmit","Group","controlId","Check","onChange","NoQuestion","match","params","addQuestion","newQuestion","addedQuestion","optionA","optionB","formData","setFormData","e","sm","Control","placeholder","userScore","totalUser","values","index","Table","bordered","hover","Component","component","loading","rest","render","props","push","NotFound","initialState","getItem","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","LeaderBoard","AnswerQuestion","NewQuestion","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4b0622af.chunk.js","sourcesContent":["let users = {\n\tsarahedo: {\n\t\tid: 'sarahedo',\n\t\tname: 'Sarah Edo',\n\t\tavatarURL: 'https://robohash.org/sarah?size=150x150',\n\t\tanswers: {\n\t\t\t'8xf0y6ziyjabvozdd253nd': 'optionOne',\n\t\t\t'6ni6ok3ym7mf1p33lnez': 'optionTwo',\n\t\t\tam8ehyc8byjqgar0jgpub9: 'optionTwo',\n\t\t\tloxhs1bqm25b708cmbf3g: 'optionTwo'\n\t\t},\n\t\tquestions: [ '8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9' ]\n\t},\n\ttylermcginnis: {\n\t\tid: 'tylermcginnis',\n\t\tname: 'Tyler McGinnis',\n\t\tavatarURL: 'https://robohash.org/tyler?size=150x150',\n\t\tanswers: {\n\t\t\tvthrdm985a262al8qx3do: 'optionOne',\n\t\t\txj352vofupe1dqz9emx13r: 'optionTwo'\n\t\t},\n\t\tquestions: [ 'loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do' ]\n\t},\n\tjohndoe: {\n\t\tid: 'johndoe',\n\t\tname: 'John Doe',\n\t\tavatarURL: 'https://robohash.org/john?size=150x150',\n\t\tanswers: {\n\t\t\txj352vofupe1dqz9emx13r: 'optionOne',\n\t\t\tvthrdm985a262al8qx3do: 'optionTwo',\n\t\t\t'6ni6ok3ym7mf1p33lnez': 'optionTwo'\n\t\t},\n\t\tquestions: [ '6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r' ]\n\t}\n};\n\nlet questions = {\n\t'8xf0y6ziyjabvozdd253nd': {\n\t\tid: '8xf0y6ziyjabvozdd253nd',\n\t\tauthor: 'sarahedo',\n\t\ttimestamp: 1467166872634,\n\t\toptionOne: {\n\t\t\tvotes: [ 'sarahedo' ],\n\t\t\ttext: 'have horrible short term memory'\n\t\t},\n\t\toptionTwo: {\n\t\t\tvotes: [],\n\t\t\ttext: 'have horrible long term memory'\n\t\t}\n\t},\n\t'6ni6ok3ym7mf1p33lnez': {\n\t\tid: '6ni6ok3ym7mf1p33lnez',\n\t\tauthor: 'johndoe',\n\t\ttimestamp: 1468479767190,\n\t\toptionOne: {\n\t\t\tvotes: [],\n\t\t\ttext: 'become a superhero'\n\t\t},\n\t\toptionTwo: {\n\t\t\tvotes: [ 'johndoe', 'sarahedo' ],\n\t\t\ttext: 'become a supervillain'\n\t\t}\n\t},\n\tam8ehyc8byjqgar0jgpub9: {\n\t\tid: 'am8ehyc8byjqgar0jgpub9',\n\t\tauthor: 'sarahedo',\n\t\ttimestamp: 1488579767190,\n\t\toptionOne: {\n\t\t\tvotes: [],\n\t\t\ttext: 'be telekinetic'\n\t\t},\n\t\toptionTwo: {\n\t\t\tvotes: [ 'sarahedo' ],\n\t\t\ttext: 'be telepathic'\n\t\t}\n\t},\n\tloxhs1bqm25b708cmbf3g: {\n\t\tid: 'loxhs1bqm25b708cmbf3g',\n\t\tauthor: 'tylermcginnis',\n\t\ttimestamp: 1482579767190,\n\t\toptionOne: {\n\t\t\tvotes: [],\n\t\t\ttext: 'be a front-end developer'\n\t\t},\n\t\toptionTwo: {\n\t\t\tvotes: [ 'sarahedo' ],\n\t\t\ttext: 'be a back-end developer'\n\t\t}\n\t},\n\tvthrdm985a262al8qx3do: {\n\t\tid: 'vthrdm985a262al8qx3do',\n\t\tauthor: 'tylermcginnis',\n\t\ttimestamp: 1489579767190,\n\t\toptionOne: {\n\t\t\tvotes: [ 'tylermcginnis' ],\n\t\t\ttext: 'find $50 yourself'\n\t\t},\n\t\toptionTwo: {\n\t\t\tvotes: [ 'johndoe' ],\n\t\t\ttext: 'have your best friend find $500'\n\t\t}\n\t},\n\txj352vofupe1dqz9emx13r: {\n\t\tid: 'xj352vofupe1dqz9emx13r',\n\t\tauthor: 'johndoe',\n\t\ttimestamp: 1493579767190,\n\t\toptionOne: {\n\t\t\tvotes: [ 'johndoe' ],\n\t\t\ttext: 'write JavaScript'\n\t\t},\n\t\toptionTwo: {\n\t\t\tvotes: [ 'tylermcginnis' ],\n\t\t\ttext: 'write Swift'\n\t\t}\n\t}\n};\n\nfunction generateUID() {\n\treturn Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n}\n\nexport function _getUsers() {\n\treturn new Promise((res, rej) => {\n\t\tsetTimeout(() => res({ ...users }), 1000);\n\t});\n}\n\nexport function _getQuestions() {\n\treturn new Promise((res, rej) => {\n\t\tsetTimeout(() => res({ ...questions }), 1000);\n\t});\n}\n\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\n\treturn {\n\t\tid: generateUID(),\n\t\ttimestamp: Date.now(),\n\t\tauthor,\n\t\toptionOne: {\n\t\t\tvotes: [],\n\t\t\ttext: optionOneText\n\t\t},\n\t\toptionTwo: {\n\t\t\tvotes: [],\n\t\t\ttext: optionTwoText\n\t\t}\n\t};\n}\n\nexport function _saveQuestion(question) {\n\treturn new Promise((res, rej) => {\n\t\tconst authedUser = question.author;\n\t\tconst formattedQuestion = formatQuestion(question);\n\n\t\tsetTimeout(() => {\n\t\t\tquestions = {\n\t\t\t\t...questions,\n\t\t\t\t[formattedQuestion.id]: formattedQuestion\n\t\t\t};\n\n\t\t\tusers = {\n\t\t\t\t...users,\n\t\t\t\t[authedUser]: {\n\t\t\t\t\t...users[authedUser],\n\t\t\t\t\tquestions: users[authedUser].questions.concat([ formattedQuestion.id ])\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tres(formattedQuestion);\n\t\t}, 1000);\n\t});\n}\n\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\n\treturn new Promise((res, rej) => {\n\t\tsetTimeout(() => {\n\t\t\tusers = {\n\t\t\t\t...users,\n\t\t\t\t[authedUser]: {\n\t\t\t\t\t...users[authedUser],\n\t\t\t\t\tanswers: {\n\t\t\t\t\t\t...users[authedUser].answers,\n\t\t\t\t\t\t[qid]: answer\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tquestions = {\n\t\t\t\t...questions,\n\t\t\t\t[qid]: {\n\t\t\t\t\t...questions[qid],\n\t\t\t\t\t[answer]: {\n\t\t\t\t\t\t...questions[qid][answer],\n\t\t\t\t\t\tvotes: questions[qid][answer].votes.concat([ authedUser ])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tres();\n\t\t}, 500);\n\t});\n}\n","// export const SET_ALERT = 'SET_ALERT';\n// export const REMOVE_ALERT = 'REMOVE_ALERT';\n\n// export const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\n// export const REGISTER_FAILURE = 'REGISTER_FAILURE';\n\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT = 'LOGOUT';\n\n// export const GET_PROFILE = 'GET_PROFILE';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\n// export const PROFILE_ERROR = 'PROFILE_ERROR';\n// export const UPDATE_PROFILE = 'UPDATE_PROFILE';\n\nexport const ADD_QUESTION = 'ADD_QUESTION';\nexport const QUESTION_FAILURE = 'QUESTION_FAILURE';\nexport const GET_QUESTIONS = 'GET_QUESTIONS';\n\nexport const GET_USERS = 'GET_USERS';\nexport const USER_FAILURE = 'USER_FAILURE';\n\nexport const ADD_ANSWER_USER = 'ADD_ANSWER_USER';\nexport const ANSWER_FAIL_USER = 'ANSWER_FAIL_USER';\n\nexport const ADD_ANSWER_QUESTION = 'ADD_ANSWER_QUESTION';\nexport const ANSWER_FAIL_QUESTION = 'ANSWER_FAIL_QUESTION';\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { Card, DropdownButton, Dropdown } from 'react-bootstrap';\nimport { _getUsers } from '../utils/_Data';\nimport PropTypes from 'prop-types';\nimport { login } from '../actions/Auth';\nimport { connect } from 'react-redux';\n\nconst LoginBox = ({ login, isAuthenticated, location }) => {\n\tconst [ usersName, setUsersName ] = useState([]);\n\n\tlet userSignIn = null;\n\t// console.log(location.pathname);\n\n\tuseEffect(() => {\n\t\tconst getUsers = async () => {\n\t\t\tconst users = await _getUsers();\n\t\t\t//console.log(users);\n\n\t\t\tsetUsersName(users);\n\t\t};\n\t\tgetUsers();\n\t}, []);\n\n\tconst onSelectHandler = (evt, evtkey) => {\n\t\t// login(event);\n\t\t// console.log(event.target.name);\n\t\tconsole.log(evt);\n\t\tconsole.log(evtkey.target.name);\n\t\tlogin(evtkey.target.name, evt, location);\n\t};\n\n\tconsole.log(usersName);\n\tif (usersName) {\n\t\tuserSignIn = Object.entries(usersName).map(([ key, value ]) => {\n\t\t\treturn (\n\t\t\t\t<Dropdown.Item key={value.id} eventKey={value.id} name={value.name}>\n\t\t\t\t\t{value.name}\n\t\t\t\t</Dropdown.Item>\n\t\t\t);\n\t\t});\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Card className=\"text-center\">\n\t\t\t\t<Card.Header>LOGIN</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Card.Title>SIGN IN as:</Card.Title>\n\n\t\t\t\t\t<DropdownButton\n\t\t\t\t\t\tonSelect={onSelectHandler}\n\t\t\t\t\t\tvariant=\"outline-info\"\n\t\t\t\t\t\tid=\"outline-info\"\n\t\t\t\t\t\ttitle=\"Sign In\"\n\t\t\t\t\t\tblock=\"true\"\n\t\t\t\t\t\trole=\"menu\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{userSignIn}\n\t\t\t\t\t</DropdownButton>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nLoginBox.propTypes = {\n\tlogin: PropTypes.func.isRequired,\n\tisAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = (state) => ({\n\tisAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(LoginBox);\n","import { USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT, CLEAR_PROFILE } from './Types';\n\n//import { useLocation } from 'react-router-dom';\n\n//LOGIN USER\nexport const login = (name, id, location) => async (dispatch) => {\n\tconsole.log(location);\n\ttry {\n\t\tdispatch({\n\t\t\ttype: LOGIN_SUCCESS,\n\t\t\tpayload: {\n\t\t\t\tname: name,\n\t\t\t\tid: id\n\t\t\t}\n\t\t});\n\t\twindow.location.replace(location);\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\tdispatch({\n\t\t\ttype: LOGIN_FAILURE\n\t\t});\n\t}\n};\n\n//Load User\nexport const loadUser = () => async (dispatch) => {\n\tif (localStorage.name) {\n\t\t//TOKEN is Present in local storage\n\n\t\ttry {\n\t\t\tdispatch({\n\t\t\t\ttype: USER_LOADED,\n\t\t\t\tpayload: {\n\t\t\t\t\tname: localStorage.name,\n\t\t\t\t\tid: localStorage.id\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tdispatch({\n\t\t\t\ttype: AUTH_ERROR\n\t\t\t});\n\t\t}\n\t} else {\n\t\t//TOKEN is NOT Present in local storage\n\t\tdispatch({\n\t\t\ttype: AUTH_ERROR\n\t\t});\n\t}\n};\n\n//LOGOUT\nexport const logout = () => (dispatch) => {\n\tdispatch({\n\t\ttype: CLEAR_PROFILE\n\t});\n\tdispatch({\n\t\ttype: LOGOUT\n\t});\n\n\t// window.location.reload(false);\n\t// window.location.replace('/');\n};\n","import React, { Fragment } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../actions/Auth';\nimport { Link } from 'react-router-dom';\n\nconst Header = ({ isAuthenticated, user, logout }) => {\n\tlet headerComponent = null;\n\n\tconst onClickHandler = () => {\n\t\tlogout();\n\t};\n\n\tif (isAuthenticated) {\n\t\theaderComponent = (\n\t\t\t<Fragment>\n\t\t\t\t<Navbar bg=\"dark\" variant=\"dark\">\n\t\t\t\t\t<Navbar.Brand as={Link} to=\"/dashboard\">\n\t\t\t\t\t\t<img alt=\"\" src=\"/logo.svg\" width=\"30\" height=\"30\" className=\"d-inline-block align-top\" /> React\n\t\t\t\t\t\tWould You Rather\n\t\t\t\t\t</Navbar.Brand>\n\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t<Nav.Link as={Link} to=\"/leaderboard\">\n\t\t\t\t\t\t\tLeaderBoard\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t<Nav.Link as={Link} to=\"/dashboard\">\n\t\t\t\t\t\t\tDashboard\n\t\t\t\t\t\t</Nav.Link>\n\n\t\t\t\t\t\t<Nav.Link as={Link} to=\"/add\">\n\t\t\t\t\t\t\tNew Question\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t<Nav className=\"ml-auto\">\n\t\t\t\t\t\t<Nav.Link as={Link} to=\"/dashboard\">\n\t\t\t\t\t\t\t{user}\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t<Nav.Link onClick={onClickHandler}>Logout</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar>\n\t\t\t</Fragment>\n\t\t);\n\t} else {\n\t\theaderComponent = (\n\t\t\t<Fragment>\n\t\t\t\t<Navbar bg=\"dark\" variant=\"dark\">\n\t\t\t\t\t<Navbar.Brand href=\"/\">\n\t\t\t\t\t\t<img alt=\"\" src=\"/logo.svg\" width=\"30\" height=\"30\" className=\"d-inline-block align-top\" /> React\n\t\t\t\t\t\tWould You Rather\n\t\t\t\t\t</Navbar.Brand>\n\t\t\t\t</Navbar>\n\t\t\t</Fragment>\n\t\t);\n\t}\n\n\treturn <Fragment>{headerComponent}</Fragment>;\n};\n\nHeader.propTypes = {\n\tlogout: PropTypes.func.isRequired,\n\tisAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = (state) => ({\n\tisAuthenticated: state.auth.isAuthenticated,\n\tuser: state.auth.user\n});\nexport default connect(mapStateToProps, { logout })(Header);\n","import React, { Fragment } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport LoginBox from '../components/LoginBox';\nimport Header from '../components/Header';\n\nconst BeforeLogin = ({ location }) => {\n\t// console.log(location.state.from);\n\tlet path = '/dashboard';\n\tif (location !== undefined && location.state !== undefined) {\n\t\tpath = location.state.from.pathname;\n\t\t//console.log(location);\n\t}\n\treturn (\n\t\t<Fragment>\n\t\t\t<Header />\n\t\t\t<Container style={{ paddingTop: 50 }}>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<LoginBox location={path} />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</Fragment>\n\t);\n};\n\nexport default BeforeLogin;\n","import React, { Fragment } from 'react';\nimport { Card, CardGroup, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst DisplayQuestions = ({ questions, allQuestions, answeredQuestion = false }) => {\n\t// console.log(questions);\n\t// console.log(allQuestions);\n\tlet CardComponents = null;\n\n\tif (questions && allQuestions) {\n\t\tCardComponents = questions.map((qid) => {\n\t\t\tlet bodyComponent = null;\n\n\t\t\tif (answeredQuestion) {\n\t\t\t\tbodyComponent = (\n\t\t\t\t\t<Card key={qid} style={{ minWidth: '18rem', margin: '5px' }}>\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Card.Title>{allQuestions[qid].author}</Card.Title>\n\t\t\t\t\t\t\t<Card.Text>{allQuestions[qid].optionOne.text}</Card.Text>\n\t\t\t\t\t\t\t<Card.Text>{allQuestions[qid].optionTwo.text}</Card.Text>\n\n\t\t\t\t\t\t\t<Link to={`/questions/${allQuestions[qid].id}`}>\n\t\t\t\t\t\t\t\t<Button variant=\"outline-success\">Visit the question</Button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tbodyComponent = (\n\t\t\t\t\t<Card key={qid} style={{ minWidth: '18rem', margin: '5px' }}>\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Card.Title>{allQuestions[qid].author}</Card.Title>\n\t\t\t\t\t\t\t<Card.Text>{allQuestions[qid].optionOne.text}</Card.Text>\n\t\t\t\t\t\t\t<Card.Text>{allQuestions[qid].optionTwo.text}</Card.Text>\n\n\t\t\t\t\t\t\t<Link to={`/questions/${allQuestions[qid].id}`}>\n\t\t\t\t\t\t\t\t<Button variant=\"outline-success\">Answer the Question</Button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn bodyComponent;\n\t\t});\n\t}\n\treturn (\n\t\t<Fragment>\n\t\t\t<CardGroup>{CardComponents}</CardGroup>\n\t\t</Fragment>\n\t);\n};\n\nDisplayQuestions.propTypes = {\n\tallQuestions: PropTypes.object\n};\nconst mapStateToProps = (state) => ({\n\tallQuestions: state.questions.questions\n});\n\nexport default connect(mapStateToProps)(DisplayQuestions);\n","import React, { useState } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { Container } from 'react-bootstrap';\nimport DisplayQuestions from './DisplayQuestions';\n\nfunction ControlledTabs({ questions, users }) {\n\tconst [ key, setKey ] = useState('home');\n\t//console.log(questions);\n\t//console.log(users);\n\n\tlet answeredQuestions = null;\n\tlet unansweredQuestions = null;\n\n\tif (users && questions) {\n\t\tconst user = users[localStorage.id];\n\t\t//console.log(user);\n\n\t\tansweredQuestions = Object.keys(user.answers).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n\n\t\t//console.log(answeredQuestions);\n\n\t\tunansweredQuestions = Object.keys(questions)\n\t\t\t.filter((qid) => !answeredQuestions.includes(qid))\n\t\t\t.sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n\n\t\t//console.log(unansweredQuestions);\n\t}\n\n\treturn (\n\t\t<Tabs id=\"controlled-tab-example\" activeKey={key} onSelect={(k) => setKey(k)}>\n\t\t\t<Tab eventKey=\"home\" title=\"Un-answered Questions\">\n\t\t\t\t<Container>\n\t\t\t\t\t<DisplayQuestions questions={unansweredQuestions} />\n\t\t\t\t</Container>\n\t\t\t</Tab>\n\t\t\t<Tab eventKey=\"profile\" title=\"Answered Questions\">\n\t\t\t\t<DisplayQuestions questions={answeredQuestions} answeredQuestion={true} />\n\t\t\t</Tab>\n\t\t</Tabs>\n\t);\n}\n\nControlledTabs.propTypes = {\n\tquestions: PropTypes.object,\n\tusers: PropTypes.object\n};\n\nconst mapStateToProps = (state) => ({\n\tquestions: state.questions.questions,\n\tusers: state.users.users\n});\n\nexport default connect(mapStateToProps, {})(ControlledTabs);\n","import React, { Fragment } from 'react';\nimport Header from '../components/Header';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport ControlledTabs from '../components/ControlledTabs';\n\nconst Dashboard = () => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Header />\n\t\t\t<Container style={{ textAlign: 'center', marginTop: 50 }}>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<ControlledTabs />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</Fragment>\n\t);\n};\n\nexport default Dashboard;\n","import { GET_USERS, USER_FAILURE, ADD_ANSWER_USER, ANSWER_FAIL_USER } from './Types';\nimport { _getUsers } from '../utils/_Data';\n//import store from '../store/Store';\n\n//Get All\nexport const getUsers = () => async (dispatch) => {\n\tlet payload = await _getUsers();\n\t//console.log(payload);\n\n\ttry {\n\t\tdispatch({\n\t\t\ttype: GET_USERS,\n\t\t\tpayload\n\t\t});\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\tdispatch({\n\t\t\ttype: USER_FAILURE\n\t\t});\n\t}\n};\n\n//Add answer\nexport const addAnswerUser = (payload) => async (dispatch) => {\n\tconsole.log(payload);\n\n\ttry {\n\t\tdispatch({\n\t\t\ttype: ADD_ANSWER_USER,\n\t\t\tpayload\n\t\t});\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\tdispatch({\n\t\t\ttype: ANSWER_FAIL_USER\n\t\t});\n\t}\n};\n","import React, { useState, Fragment } from 'react';\nimport { Card, Button, Form, Image, ProgressBar } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { _saveQuestionAnswer } from '../utils/_Data';\nimport { addAnswerUser } from '../actions/Users';\nimport { recordAnswerQuestion } from '../actions/Questions';\n\nconst CardDisplay = ({\n\toption1Text,\n\toption2Text,\n\tname,\n\tqid,\n\taddAnswerUser,\n\tallUsers,\n\tallQuestions,\n\trecordAnswerQuestion,\n\tisAnswered = false\n}) => {\n\tconst [ choice, setChoice ] = useState('');\n\tconst [ redirect, setRedirect ] = useState(false);\n\tconst authedUser = localStorage.id;\n\n\tif (redirect) {\n\t\treturn <Redirect to=\"/leaderboard\" />;\n\t}\n\n\t//console.log(allUsers);\n\n\tconst onChangeHandler = (event) => {\n\t\tsetChoice(event.target.value);\n\t\tconsole.log(choice);\n\t};\n\n\tconst onSubmitHandler = async (event) => {\n\t\tevent.preventDefault();\n\t\t//console.log(choice);\n\t\tlet answers = {\n\t\t\tauthedUser,\n\t\t\tqid: qid,\n\t\t\tanswer: choice\n\t\t};\n\n\t\tconst res = await _saveQuestionAnswer(answers);\n\t\tconsole.log(res);\n\n\t\tconst newAnswerUser = {\n\t\t\t[qid]: choice\n\t\t};\n\t\tconst newAnswers = { ...allUsers[authedUser].answers, ...newAnswerUser };\n\t\t//console.log(newAnswers);\n\n\t\tallUsers[authedUser].answers = newAnswers;\n\t\t//console.log(allUsers);\n\n\t\tconsole.log(allQuestions[qid].optionOne.votes);\n\n\t\tif (choice === 'optionOne') {\n\t\t\tconst userVotes = [ ...allQuestions[qid].optionOne.votes, authedUser ];\n\t\t\tallQuestions[qid].optionOne.votes = userVotes;\n\t\t}\n\t\tif (choice === 'optionTwo') {\n\t\t\tconst userVotes = [ ...allQuestions[qid].optionTwo.votes, authedUser ];\n\t\t\tallQuestions[qid].optionTwo.votes = userVotes;\n\t\t}\n\n\t\tconsole.log(allQuestions);\n\n\t\taddAnswerUser(allUsers);\n\t\trecordAnswerQuestion(allQuestions);\n\t\tsetRedirect(true);\n\t};\n\n\tlet bodyComponent = null;\n\n\tif (isAnswered) {\n\t\tlet total = allQuestions[qid].optionOne.votes.length + allQuestions[qid].optionTwo.votes.length;\n\t\t// console.log(allQuestions[qid]);\n\n\t\tfunction financial(x) {\n\t\t\treturn Number.parseFloat(x).toFixed(0);\n\t\t}\n\n\t\tlet percent1 = financial(allQuestions[qid].optionOne.votes.length / total * 100);\n\t\tlet percent2 = financial(allQuestions[qid].optionTwo.votes.length / total * 100);\n\t\tbodyComponent = (\n\t\t\t<div style={{ alignContent: 'center', alignItems: 'center', alignText: 'center' }}>\n\t\t\t\t<Card className=\"text-center\" border=\"warning\" key={qid} style={{ minWidth: '60rem', marginTop: 20 }}>\n\t\t\t\t\t<Card.Header>Would You Rather?</Card.Header>\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<Card.Title>{allQuestions[qid].author}</Card.Title>\n\t\t\t\t\t\t<Image src={`https://robohash.org/${name}?size=170x150`} roundedCircle />\n\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t{allQuestions[qid].optionOne.votes.includes(localStorage.id) ? (\n\t\t\t\t\t\t\t\t<Button variant=\"warning\">{allQuestions[qid].optionOne.text}</Button>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tallQuestions[qid].optionOne.text\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t{allQuestions[qid].optionTwo.votes.includes(localStorage.id) ? (\n\t\t\t\t\t\t\t\t<Button variant=\"warning\">{allQuestions[qid].optionTwo.text}</Button>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tallQuestions[qid].optionTwo.text\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t\t<Card.Footer>\n\t\t\t\t\t\tUsers have answered:\n\t\t\t\t\t\t<ProgressBar>\n\t\t\t\t\t\t\t<ProgressBar\n\t\t\t\t\t\t\t\tstriped\n\t\t\t\t\t\t\t\tvariant=\"success\"\n\t\t\t\t\t\t\t\tnow={percent1}\n\t\t\t\t\t\t\t\tkey={1}\n\t\t\t\t\t\t\t\tlabel={`option 1: ${percent1}%`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ProgressBar variant=\"info\" now={percent2} key={2} label={`option 2: ${percent2}%`} />\n\t\t\t\t\t\t</ProgressBar>\n\t\t\t\t\t</Card.Footer>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\tbodyComponent = (\n\t\t\t<div>\n\t\t\t\t<Card className=\"text-center\" border=\"warning\" style={{ minWidth: '60rem', marginTop: 20 }}>\n\t\t\t\t\t<Card.Header>Would You Rather?</Card.Header>\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<Card.Title>{name}</Card.Title>\n\t\t\t\t\t\t<Image src={`https://robohash.org/${name}?size=170x150`} roundedCircle />\n\n\t\t\t\t\t\t<Form onSubmit={onSubmitHandler}>\n\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicCheckbox\">\n\t\t\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\tname=\"choice\"\n\t\t\t\t\t\t\t\t\tonChange={onChangeHandler}\n\t\t\t\t\t\t\t\t\tid={'option1'}\n\t\t\t\t\t\t\t\t\tlabel={option1Text}\n\t\t\t\t\t\t\t\t\tvalue=\"optionOne\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\tname=\"choice\"\n\t\t\t\t\t\t\t\t\tonChange={onChangeHandler}\n\t\t\t\t\t\t\t\t\tid={'option2'}\n\t\t\t\t\t\t\t\t\tvalue=\"optionTwo\"\n\t\t\t\t\t\t\t\t\tlabel={option2Text}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t);\n\t}\n\treturn <Fragment>{bodyComponent}</Fragment>;\n};\n\nCardDisplay.propTypes = {\n\tallQuestions: PropTypes.object,\n\taddAnswerUser: PropTypes.func.isRequired,\n\trecordAnswerQuestion: PropTypes.func.isRequired\n};\nconst mapStateToProps = (state) => ({\n\tallQuestions: state.questions.questions,\n\tallUsers: state.users.users\n});\n\nexport default connect(mapStateToProps, { addAnswerUser, recordAnswerQuestion })(CardDisplay);\n","import { ADD_QUESTION, QUESTION_FAILURE, GET_QUESTIONS, ADD_ANSWER_QUESTION, ANSWER_FAIL_QUESTION } from './Types';\nimport { _getQuestions } from '../utils/_Data';\nimport { getUsers } from './Users';\n\n//Add Question\nexport const addQuestion = (question) => async (dispatch) => {\n\t//get all questions\n\tlet payload = await _getQuestions();\n\tconsole.log(payload);\n\tconsole.log(question);\n\n\tlet newQuestion = {\n\t\t[question.id]: question\n\t};\n\n\t//add new question using spread operator\n\tlet addedQuestion = { ...payload, ...newQuestion };\n\tconsole.log(addedQuestion);\n\n\tdispatch(getUsers());\n\n\ttry {\n\t\tdispatch({\n\t\t\ttype: ADD_QUESTION,\n\t\t\tpayload: addedQuestion\n\t\t});\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\tdispatch({\n\t\t\ttype: QUESTION_FAILURE\n\t\t});\n\t}\n};\n\n//Get All\nexport const getQuestions = () => async (dispatch) => {\n\tlet payload = await _getQuestions();\n\n\ttry {\n\t\tdispatch({\n\t\t\ttype: GET_QUESTIONS,\n\t\t\tpayload\n\t\t});\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\tdispatch({\n\t\t\ttype: QUESTION_FAILURE\n\t\t});\n\t}\n};\n\n//Add answer to Question\nexport const recordAnswerQuestion = (payload) => async (dispatch) => {\n\tconsole.log(payload);\n\n\ttry {\n\t\tdispatch({\n\t\t\ttype: ADD_ANSWER_QUESTION,\n\t\t\tpayload\n\t\t});\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\tdispatch({\n\t\t\ttype: ANSWER_FAIL_QUESTION\n\t\t});\n\t}\n};\n\n//clear questions\nexport const clearQuestions = () => (dispatch) => {\n\tdispatch({\n\t\ttype: QUESTION_FAILURE\n\t});\n\tdispatch({\n\t\ttype: QUESTION_FAILURE\n\t});\n};\n","import React from 'react';\n// import Header from './Header';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst NoQuestion = () => {\n\treturn (\n\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t<h1>Not Found</h1>\n\n\t\t\t<Button variant=\"outline\">\n\t\t\t\t<Link to=\"/dashboard\">\n\t\t\t\t\t<h4>Go back to home Page</h4>\n\t\t\t\t</Link>\n\t\t\t</Button>\n\t\t</div>\n\t);\n};\n\nexport default NoQuestion;\n","import React, { Fragment } from 'react';\nimport Header from '../components/Header';\nimport CardDisplay from '../components/CardDisplay';\nimport { Container, Row } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NoQuestion from '../components/NoQuestion';\n\nconst AnswerQuestion = ({ match, allQuestions, allUsers }) => {\n\t//console.log(match.params.id);\n\tconst qid = match.params.id;\n\tlet isAnswered = false;\n\tconst authedUser = localStorage.id;\n\tlet bodyComponent = null;\n\n\tif (allUsers) {\n\t\t//console.log(allUsers[authedUser].answers[qid]);\n\t\t// console.log(Object.keys(allUsers[authedUser].answers));\n\n\t\tif (allUsers[authedUser].answers[qid] !== null && allUsers[authedUser].answers[qid] !== undefined) {\n\t\t\tisAnswered = true;\n\t\t}\n\t}\n\n\tconsole.log(isAnswered);\n\n\tif (allQuestions) {\n\t\tconsole.log(allQuestions[match.params.id]);\n\n\t\tif (allQuestions[match.params.id] === undefined) {\n\t\t\tbodyComponent = (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<NoQuestion />\n\t\t\t\t</Fragment>\n\t\t\t);\n\t\t} else {\n\t\t\tif (isAnswered) {\n\t\t\t\tbodyComponent = (\n\t\t\t\t\t<CardDisplay\n\t\t\t\t\t\toption1Text={allQuestions[match.params.id].optionOne.text}\n\t\t\t\t\t\toption2Text={allQuestions[match.params.id].optionTwo.text}\n\t\t\t\t\t\tname={allQuestions[match.params.id].author}\n\t\t\t\t\t\tqid={match.params.id}\n\t\t\t\t\t\tisAnswered={true}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tbodyComponent = (\n\t\t\t\t\t<CardDisplay\n\t\t\t\t\t\toption1Text={allQuestions[match.params.id].optionOne.text}\n\t\t\t\t\t\toption2Text={allQuestions[match.params.id].optionTwo.text}\n\t\t\t\t\t\tname={allQuestions[match.params.id].author}\n\t\t\t\t\t\tqid={match.params.id}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Header />\n\t\t\t<Container style={{ alignContent: 'center', alignItems: 'center' }}>\n\t\t\t\t<Row style={{ alignContent: 'center', alignItems: 'center' }}>{bodyComponent}</Row>\n\t\t\t</Container>\n\t\t</Fragment>\n\t);\n};\nAnswerQuestion.propTypes = {\n\tallQuestions: PropTypes.object,\n\tallUsers: PropTypes.object\n};\nconst mapStateToProps = (state) => ({\n\tallQuestions: state.questions.questions,\n\tallUsers: state.users.users\n});\n\nexport default connect(mapStateToProps, null)(AnswerQuestion);\n","import React, { Fragment, useState } from 'react';\nimport Header from '../components/Header';\nimport { Row, Col, Container, Card, Button, Form } from 'react-bootstrap';\nimport { _saveQuestion } from '../utils/_Data';\nimport { addQuestion } from '../actions/Questions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nconst NewQuestion = ({ addQuestion }) => {\n\tconst [ redirect, setRedirect ] = useState(false);\n\tconst [ formData, setFormData ] = useState({\n\t\toptionA: '',\n\t\toptionB: ''\n\t});\n\tconst { optionA, optionB } = formData;\n\n\tconst onChange = (e) => {\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n\t};\n\n\tconst onSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(`option1 : ${optionA} | option2: ${optionB}`);\n\t\tlet formattedQuestion = {\n\t\t\tauthor: localStorage.id,\n\t\t\toptionOneText: optionA,\n\t\t\toptionTwoText: optionB\n\t\t};\n\t\tconst res = await _saveQuestion(formattedQuestion);\n\t\taddQuestion(res);\n\t\tconsole.log(res);\n\t\tsetRedirect(true);\n\t};\n\n\tif (redirect) {\n\t\treturn <Redirect to=\"/dashboard\" />;\n\t}\n\treturn (\n\t\t<Fragment>\n\t\t\t<Header />\n\t\t\t<Container style={{ textAlign: 'center', marginTop: 50 }}>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col sm={2} />\n\t\t\t\t\t<Col sm={8}>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Card.Header as=\"h5\">Featured</Card.Header>\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<Form onSubmit={onSubmit}>\n\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Card.Title>Would you rather</Card.Title>\n\t\t\t\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Option A\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"optionA\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={optionA}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Option B\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"optionB\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={optionB}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col sm={2} />\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</Fragment>\n\t);\n};\n\nNewQuestion.propTypes = {\n\taddQuestion: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addQuestion })(NewQuestion);\n","import React, { Fragment } from 'react';\nimport Header from '../components/Header';\nimport { Table } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst LeaderBoard = ({ users }) => {\n\t// console.log(users);\n\tlet bodyComponent = null;\n\tlet totalUser = users;\n\n\tif (totalUser) {\n\t\tbodyComponent = Object.values(totalUser).sort((a, b) => userScore(b) - userScore(a)).map((user, index) => {\n\t\t\treturn (\n\t\t\t\t<tr key={user.id}>\n\t\t\t\t\t<td>{index + 1}</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<img src={user.avatarURL} className=\"avatar\" alt={`Avatar of ${user.name}`} />\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>{user.name}</td>\n\t\t\t\t\t<td>{user.questions.length}</td>\n\t\t\t\t\t<td>{Object.keys(user.answers).length}</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t});\n\t}\n\treturn (\n\t\t<Fragment>\n\t\t\t<Header />\n\t\t\t<Table striped bordered hover>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>#</th>\n\t\t\t\t\t\t<th>Profile</th>\n\t\t\t\t\t\t<th>User</th>\n\t\t\t\t\t\t<th>Question Asked</th>\n\t\t\t\t\t\t<th>Question Answered</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>{bodyComponent}</tbody>\n\t\t\t</Table>\n\t\t</Fragment>\n\t);\n};\nLeaderBoard.propTypes = {\n\tusers: PropTypes.object\n};\n\nconst userScore = (user) => Object.keys(user.answers).length + user.questions.length;\nconst mapStateToProps = (state) => {\n\treturn { users: state.users.users };\n};\n\nexport default connect(mapStateToProps)(LeaderBoard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, auth: { isAuthenticated, loading }, ...rest }) => {\n\treturn (\n\t\t<Route\n\t\t\t{...rest}\n\t\t\trender={(props) =>\n\t\t\t\tloading ? (\n\t\t\t\t\t<h2> Loading... </h2>\n\t\t\t\t) : isAuthenticated ? (\n\t\t\t\t\t<Component {...props} />\n\t\t\t\t) : (\n\t\t\t\t\t<Redirect\n\t\t\t\t\t\tpush\n\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\tpathname: '/',\n\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\tfrom: props.location\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t/>\n\t);\n};\n\nPrivateRoute.propTypes = {\n\tauth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\tauth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport Header from '../components/Header';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst NotFound = () => {\n\treturn (\n\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t<Header />\n\t\t\t<h1>Not Found</h1>\n\n\t\t\t<Button variant=\"outline\">\n\t\t\t\t<Link to=\"/dashboard\">\n\t\t\t\t\t<h4>Go back to home Page</h4>\n\t\t\t\t</Link>\n\t\t\t</Button>\n\t\t</div>\n\t);\n};\n\nexport default NotFound;\n","import { AUTH_ERROR, LOGIN_FAILURE, LOGIN_SUCCESS, LOGOUT, USER_LOADED } from '../actions/Types';\n\nconst initialState = {\n\tisAuthenticated: null,\n\tloading: true,\n\tuser: localStorage.getItem('name'),\n\tid: localStorage.getItem('id')\n};\n\nexport default function(state = initialState, action) {\n\tconst { type, payload } = action;\n\tswitch (type) {\n\t\tcase USER_LOADED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisAuthenticated: true,\n\t\t\t\tloading: false,\n\t\t\t\tuser: payload.name,\n\t\t\t\tid: payload.id\n\t\t\t};\n\n\t\tcase LOGIN_SUCCESS:\n\t\t\tlocalStorage.setItem('name', payload.name);\n\t\t\tlocalStorage.setItem('id', payload.id);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisAuthenticated: true,\n\t\t\t\tloading: false,\n\t\t\t\tuser: payload.name,\n\t\t\t\tid: payload.id\n\t\t\t};\n\n\t\tcase AUTH_ERROR:\n\t\tcase LOGIN_FAILURE:\n\t\tcase LOGOUT:\n\t\t\tlocalStorage.removeItem('name');\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisAuthenticated: false,\n\t\t\t\tloading: false,\n\t\t\t\tuser: null,\n\t\t\t\tid: null\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import {\n\tADD_QUESTION,\n\tQUESTION_FAILURE,\n\tGET_QUESTIONS,\n\tADD_ANSWER_QUESTION,\n\tANSWER_FAIL_QUESTION\n} from '../actions/Types';\n\nconst initialState = {\n\tquestions: null\n};\n\nexport default function(state = initialState, action) {\n\tconst { type, payload } = action;\n\tswitch (type) {\n\t\tcase ADD_QUESTION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tquestions: payload\n\t\t\t};\n\t\tcase ADD_ANSWER_QUESTION:\n\t\tcase GET_QUESTIONS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tquestions: payload\n\t\t\t};\n\n\t\tcase QUESTION_FAILURE:\n\t\tcase ANSWER_FAIL_QUESTION:\n\t\t\treturn {\n\t\t\t\tquestions: null\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { USER_FAILURE, GET_USERS, ADD_ANSWER_USER, ANSWER_FAIL_USER } from '../actions/Types';\n\nconst initialState = {\n\tusers: null\n};\n\nexport default function(state = initialState, action) {\n\tconst { type, payload } = action;\n\tswitch (type) {\n\t\tcase ADD_ANSWER_USER:\n\t\tcase GET_USERS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: payload\n\t\t\t};\n\n\t\tcase ANSWER_FAIL_USER:\n\t\tcase USER_FAILURE:\n\t\t\treturn {\n\t\t\t\tusers: null\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { combineReducers } from 'redux';\n\nimport auth from './Auth';\nimport questions from './Questions';\nimport users from './Users';\n\nexport default combineReducers({\n\tauth,\n\tquestions,\n\tusers\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst initialState = {};\n\nconst middleware = [ thunk ];\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;\n","import React, { Fragment, useEffect } from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport BeforeLogin from './pages/BeforeLogin';\nimport Dashboard from './pages/Dashboard';\nimport AnswerQuestion from './pages/AnswerQuestion';\nimport NewQuestion from './pages/NewQuestion';\nimport LeaderBoard from './pages/LeaderBoard';\nimport PrivateRoute from './route/PrivateRoute';\nimport NotFound from './components/NotFound';\n\nimport store from './store/Store';\n\nimport { loadUser } from './actions/Auth';\nimport { getQuestions } from './actions/Questions';\nimport { getUsers } from './actions/Users';\n\nfunction App() {\n\tuseEffect(() => {\n\t\tstore.dispatch(loadUser());\n\t\tstore.dispatch(getQuestions());\n\t\tstore.dispatch(getUsers());\n\t}, []);\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t<Fragment>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" component={BeforeLogin} />\n\t\t\t\t\t\t<PrivateRoute exact path=\"/leaderboard\" component={LeaderBoard} />\n\t\t\t\t\t\t<PrivateRoute path=\"/dashboard\" component={Dashboard} />\n\t\t\t\t\t\t<PrivateRoute path=\"/questions/:id\" component={AnswerQuestion} />\n\t\t\t\t\t\t<PrivateRoute path=\"/add\" component={NewQuestion} />\n\t\t\t\t\t\t<PrivateRoute component={NotFound} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Fragment>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store/Store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}